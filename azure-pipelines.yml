trigger:
  tags:
    include:
      - "v*"

resources:
  containers:
    - container: node18
      image: node:18-buster

pool:
  docker-new

variables:
- group: pipeline

jobs:
- job: GitHubSync
  container: node18
  steps:
  - checkout: self

  - script: |
      if [ "$(Build.SourceBranch)" != "refs/tags/*" ]; then

        echo "This is a tag push. Sync starting..."
        BRANCH_NAME=v3_0_40-RC1

        git config --global user.email "jigar.dafda@gmail.com"
        git config --global user.name "Jigar Dafda"

        git clone https://$(GITHUB_USERNAME):$(GITHUB_PERSONAL_TOKEN)@github.com/gofynd/fdk-store-gql.git
        cd fdk-store-gql
        git checkout $BRANCH_NAME
        rm -rf ./*
        cd ..

        cp -R `ls | grep -v "fdk-store-gql"` ./fdk-store-gql
        cp .gitignore.ci ./fdk-store-gql/.gitignore

        cd fdk-store-gql
        NODE_ENV=development npm i
        npm run build

        git add .
        git commit -m "[Auto Generated]"
        git push origin $BRANCH_NAME

        git tag $(Build.SourceBranchName)
        git push origin $(Build.SourceBranchName)

        # Create GitHub release
        RELEASE_TITLE="Release_$(Build.SourceBranchName)"
        echo $(Build.SourceBranchName)
        echo $RELEASE_TITLE
        echo $BRANCH_NAME
        POST_DATA=$(printf '{
          "tag_name": "%s",
          "target_commitish": "%s",
          "name": "%s",
          "body": "%s",
          "draft": false,
          "prerelease": false
        }' $(Build.SourceBranchName) $BRANCH_NAME $RELEASE_TITLE "$RELEASE_TITLE")
        echo $POST_DATA
        curl -X POST -H "Authorization: token $(GITHUB_PERSONAL_TOKEN)" \
             -H "Content-Type: application/json" \
             -d "$POST_DATA" \
             "https://api.github.com/repos/gofynd/fdk-store-gql/releases"


      else
        echo "This is not a tag push. Exiting..."
        exit 0
      fi
    displayName: 'Sync with GitHub'
